from langchain.retrievers.document_compressors import LLMChainFilter
from langchain.schema import Document
from typing import Any, Dict, Sequence, Callable

FILTER_CONTEXT_QUERY_SEP = '<context_query_sep>'

def get_input_with_context(query: str, doc: Document) -> Dict[str, Any]:
    """
    get_input function for filter chains using the custom filter prompts
    defined in this file.
    The input 'query' should contain the context as generated by filter_context_str,
    and the query, joined by the FILTER_CONTEXT_QUERY_SEP.
    """
    if FILTER_CONTEXT_QUERY_SEP in query:
        context, query = query.split(FILTER_CONTEXT_QUERY_SEP)
        return {"context": context, "question": query, "text": doc.page_content}
    else:
        return {"context": None, "question": query, "text": doc.page_content}
    
class FilterWithContext():
    """
    Wrapper around a LLMFilterChain, that allows input of additional
    kwargs. Additional kwargs generate a context string that for the
    filter chain's prompt template.
    Expects that the base_filter_chain uses a prompt template with
    the following inputs:
    - context: More context about the query, such as filters
    - query: The query
    - text: The document text
    """
        
    def __init__(self, base_filter_chain: LLMChainFilter, context_str_fn: Callable[[Dict,str],str]):
        """
        - base_filter_chain: The filter chain that is called after the context is resolved
        - context_str_fn: A function to generate a context string from the kwargs
                          that get passed to compress_documents
        """
        self.base_filter_chain = base_filter_chain
        self.base_filter_chain.get_input = get_input_with_context
        self.context_str_fn = context_str_fn
        
    def compress_documents(
        self,
        documents: Sequence[Document],
        query: str,
        **kwargs
    ) -> Any:
        context_str = self.context_str_fn(**kwargs)
        return self.base_filter_chain.compress_documents(documents, f"{context_str}{FILTER_CONTEXT_QUERY_SEP}{query}")